#include<iostream>
using namespace std;
int main() {
	int r, c, k, m;
	int dc[] = { 0,0,1,-1 };
	int dr[] = { 1,-1,0,0 };
	while (cin >> c >> r >> k >> m) {
		int map[55][55];
		for (int i = 0; i < c; i++) {
			for (int j = 0; j < r; j++) {
				cin >> map[i][j];
			}
		}
		while (m--) {
			int move[55][55] = { 0 };
			for (int i = 0; i < c; i++) {
				for (int j = 0; j < r; j++) {
					if (map[i][j] != -1) {
						int Cnt = 0;
						for (int t = 0; t < 4; t++) {
							int iTemp = i + dc[t];
							int jTemp = j + dr[t];
							if (iTemp >= 0 && iTemp < c && jTemp >= 0 && jTemp < r && map[iTemp][jTemp] != -1) {
								Cnt++;
							}					
						}
						while (Cnt--) {
							move[i][j] += map[i][j] / k;
						}
					}
				}
			}
			for (int i = 0; i < c; i++) {
				for (int j = 0; j < r; j++) {
					if (move[i][j] != 0) {
						map[i][j] -= move[i][j];
						while (move[i][j] > 0) {
							for (int t = 0; t < 4; t++) {
								int iTemp = i + dc[t];
								int jTemp = j + dr[t];
								if (iTemp >= 0 && iTemp < c && jTemp >= 0 && jTemp < r && map[iTemp][jTemp] != -1) {
									map[iTemp][jTemp]++;
									move[i][j]--;
								}
							}
						}
					}
				}
			}
		}
		int max = 0, min = 99999;
		for (int i = 0; i < c; i++) {
			for (int j = 0; j < r; j++) {
				if (map[i][j] != -1) {
					if (max < map[i][j])
						max = map[i][j];
					if (min > map[i][j])
						min = map[i][j];
				}
			}
		}
		cout << min << endl << max << endl;
	}
	return 0;
}